/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package net.fabricmc.bot

import com.kotlindiscord.kord.extensions.ExtensibleBot
import dev.kord.gateway.Intents
import dev.kord.gateway.PrivilegedIntent
import io.github.ytg1234.kordextbackgroundcat.util.backgroundCatDefaults
import io.github.ytg1234.kordextbackgroundcat.util.backgroundcatExt
import mu.KotlinLogging
import net.fabricmc.bot.conf.buildInfo
import net.fabricmc.bot.conf.config
import net.fabricmc.bot.database.Migrator
import net.fabricmc.bot.enums.Channels
import net.fabricmc.bot.extensions.*

/** The current instance of the bot. **/
val bot = ExtensibleBot(
    prefix = config.prefix,
    token = config.token,

    guildsToFill = listOf(config.guildSnowflake),
    fillPresences = true
)

/**
 * The main function. Every story has a beginning!
 */
@OptIn(PrivilegedIntent::class)
suspend fun main() {
    val logger = KotlinLogging.logger {}

    logger.info { "Starting Fabric Discord Bot, version ${buildInfo.version}." }

    Migrator.migrate()

    bot.addExtension(::ActionLogExtension)
    bot.addExtension(::CleanExtension)
    bot.addExtension(::DefconExtension)
    bot.addExtension(::EmojiExtension)
    bot.addExtension(::FilterExtension)
    bot.addExtension(::GitHubExtension)
    bot.addExtension(::InfractionsExtension)
    bot.addExtension(::LoggingExtension)
    bot.addExtension(::MappingsExtension)
    bot.addExtension(::ModerationExtension)
    bot.addExtension(::SelfRoleExtension)
    bot.addExtension(::SyncExtension)
    bot.addExtension(::TagsExtension)
    bot.addExtension(::UtilsExtension)
    bot.addExtension(::VersionCheckExtension)

    bot.backgroundcatExt { defaultCheck(it) && it.message.channel == config.getChannel(Channels.PLAYER_SUPPORT) }
    bot.backgroundCatDefaults(multiMc = false, nonFabric = false, fabric = true)

    bot.start {
        presence {
            playing("${config.prefix}help for command help")
        }

        intents {
            +Intents.all
        }
    }
}
